<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>老墙根下，躲雨</title>
  <subtitle>A raindrop is one sea, one rainbow.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zenvv.com/"/>
  <updated>2016-05-30T09:00:23.963Z</updated>
  <id>http://zenvv.com/</id>
  
  <author>
    <name>Peter Xu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nginx的core模块</title>
    <link href="http://zenvv.com/2016/05/28/nginx-core/"/>
    <id>http://zenvv.com/2016/05/28/nginx-core/</id>
    <published>2016-05-28T07:42:00.000Z</published>
    <updated>2016-05-30T09:00:23.963Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;ngx_http_core_module提供了nginx最基本的功能, 包括一些内置变量和配置文件中的基本指令.&lt;/p&gt;
&lt;h4 id=&quot;1-常见内置变量&quot;&gt;&lt;a href=&quot;#1-常见内置变量&quot; class=&quot;headerlink&quot; title=&quot;1. 常见内置变量&quot;&gt;&lt;/a&gt;1. 常见内置变量&lt;/h4&gt;&lt;p&gt;1) uri相关&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$uri: 当前请求uri  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$document_uri: 同$uri  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$request_uri: 原始完整请求URI(带参数)   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$scheme: 请求scheme, “http” or “https”  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$https: 如果处于ssl模式则值为“on”, 否则为空  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$host: 请求的server地址, 具体见下面的描述  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$cookie_name: cookie名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中, nginx rewrite模块是基于内置变量$request_uri进行处理的.&lt;/p&gt;
&lt;p&gt;2) remote请求相关&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$remote_addr: 客户端地址  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$remote_port: 客户端端口  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$remote_user: Basic认证中的用户名     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$request: 原始完整请求URI  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$request_body: request body&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$is_args: 如果有参数值为&amp;quot;?&amp;quot;, 否则为空  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$args: 请求uri中的参数(?后的部分)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$query_string: 同$args&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3) server相关&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$server_addr: 接收请求的server地址  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$server_name: 接收请求的server名字    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$server_port: 接收请求的server端口    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$server_protocol: 请求协议, “HTTP/1.0”, “HTTP/1.1”, 或 “HTTP/2.0”&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;4) 其它&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$hostname: nginx主机名      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$limit_rate: 限速   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$nginx_version: nginx版本&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;2-host与-http-host&quot;&gt;&lt;a href=&quot;#2-host与-http-host&quot; class=&quot;headerlink&quot; title=&quot;2. $host与$http_host&quot;&gt;&lt;/a&gt;2. $host与$http_host&lt;/h4&gt;&lt;p&gt;$http_host是对应http请求头的Host完整值.&lt;br&gt;$host是可能是以下几种情形中的一种(按顺序处理):&lt;br&gt;　　a. http请求url中的host name,&lt;br&gt;　　b. http请求header中的Host部分值(除去port),&lt;br&gt;　　c. 处理该请求server{}中的server_name.&lt;/p&gt;
&lt;h4 id=&quot;3-location指令&quot;&gt;&lt;a href=&quot;#3-location指令&quot; class=&quot;headerlink&quot; title=&quot;3. location指令&quot;&gt;&lt;/a&gt;3. location指令&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;location [ = | ~ | ~* | ^~ ] uri &amp;#123; ... &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location @name &amp;#123; ... &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以被用在server/location等指令语句中.&lt;br&gt;location有两种匹配模式: prefix匹配(location uri)或者正则匹配.&lt;br&gt;nginx首先处理prefix匹配(无论配置文件中的顺序), 然后进行正则匹配.  &lt;/p&gt;
&lt;p&gt;匹配规则的含义:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;&amp;quot;:  前缀部分匹配  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;“=”: 精确完整匹配, 成功则停止其它匹配处理   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;~&amp;quot;: 大小写敏感匹配  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;~*&amp;quot;: 大小写无关匹配  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;^~&amp;quot;: 最长大小写敏感匹配, 匹配成功则不检查其它正则.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;“location @..”是定义一个命名location, 通常用于请求重定向.&lt;/p&gt;
&lt;h4 id=&quot;4-error-page指令&quot;&gt;&lt;a href=&quot;#4-error-page指令&quot; class=&quot;headerlink&quot; title=&quot;4. error_page指令&quot;&gt;&lt;/a&gt;4. error_page指令&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;error_page code ... [=[response]] uri;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以被用在http/server/location/if等指令语句中.&lt;/p&gt;
&lt;p&gt;使用内部请求处理.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;error_page 404             /404.html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;error_page 500 502 503 504 /50x.html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;error_page 404 =200        /empty.gif;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;error_page 404 =           /404.php;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用重定向进行处理.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;error_page 403             http://example.com/forbidden.html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;error_page 404 =301        http://example.com/notfound.html;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用命名location进行处理.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    error_page 404 = @fallback;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location @fallback &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_pass http://backend;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;ngx_http_core
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="nginx" scheme="http://zenvv.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>nginx的rewrite模块</title>
    <link href="http://zenvv.com/2016/05/26/nginx-rewrite/"/>
    <id>http://zenvv.com/2016/05/26/nginx-rewrite/</id>
    <published>2016-05-26T06:50:00.000Z</published>
    <updated>2016-05-30T09:00:32.510Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;ngx_http_rewrite_module是通过对内置变量$request_uri进行正则处理, 改写用户请求的uri, 包括多条常用的指令如break/if/return/rewrite等.&lt;/p&gt;
&lt;h5 id=&quot;1-break指令&quot;&gt;&lt;a href=&quot;#1-break指令&quot; class=&quot;headerlink&quot; title=&quot;1. break指令&quot;&gt;&lt;/a&gt;1. break指令&lt;/h5&gt;&lt;p&gt;停止当前request_uri的后续rewrite规则处理.&lt;br&gt;可以在server/location/if等指令中使用.&lt;/p&gt;
&lt;h5 id=&quot;2-if指令&quot;&gt;&lt;a href=&quot;#2-if指令&quot; class=&quot;headerlink&quot; title=&quot;2. if指令&quot;&gt;&lt;/a&gt;2. if指令&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if (condition) &amp;#123; ... &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;condition:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a. 变量名: 空字符串或&amp;quot;0&amp;quot;则为false, 否则为true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    b. 字符串变量比较:  “=”和“!=” &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c. 正则匹配: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	“~”(“!~”)        - 大小写敏感字符串比较&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        “~*”(“!~*”)      - 大小写无关字符串比较&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        “-f”(“!-f”)      - 检测文件是否存在&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        “-d”(“!-d”)      - 检测文件夹是否存在&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        “-e”(“!-e”)      - 检测文件/文件夹/符号连接是否存在&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        “-x”(“!-x”)      - 检测文件是否可执行&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以在server/location等指令中使用.&lt;/p&gt;
&lt;h5 id=&quot;3-return指令&quot;&gt;&lt;a href=&quot;#3-return指令&quot; class=&quot;headerlink&quot; title=&quot;3. return指令&quot;&gt;&lt;/a&gt;3. return指令&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;return code [text];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return code URL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return URL;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;停止后续所有处理返回code给client端, 注意return 444将关闭连接不返回任何数据.&lt;br&gt;可以在server/location/if等指令中使用.&lt;/p&gt;
&lt;p&gt;通过return将http重定向到https, 有两种方法&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# server_name is customed by user in server.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return    301 https://$server_name$request_uri;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# http_host is a embedded variable in nginx.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return    301 https://$http_host$request_uri;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;4-rewrite指令&quot;&gt;&lt;a href=&quot;#4-rewrite指令&quot; class=&quot;headerlink&quot; title=&quot;4. rewrite指令&quot;&gt;&lt;/a&gt;4. rewrite指令&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rewrite regex replacement [flag];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以在server/location/if等指令中使用.&lt;br&gt;rewrite按照在配置文件中出现的顺序进行处理, 具体行为由flag决定.&lt;br&gt;但是如果某个replacement值由&lt;a href=&quot;http://(https://)开头&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://(https://)开头&lt;/a&gt;, 则停止处理返回给client.  &lt;/p&gt;
&lt;p&gt;四种flag作用:&lt;br&gt;last: 停止当前rewirte模块后续规则处理.&lt;br&gt;　　将修改后的url重新按照location规则进行匹配处理.&lt;br&gt;　　即是说(rewrite .. last)在location{}中可能被循环处理, 而在server{}中不会.&lt;br&gt;　　循环次数超过10次则停止处理并返回500错误.&lt;br&gt;break: 与上面的break指令一样.&lt;br&gt;redirect: 返回一个临时302重定向.&lt;br&gt;permanent: 返回一个永久301重定向.  &lt;/p&gt;
&lt;p&gt;例如给请求url添加前缀prefix:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;location ^~ / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if ($request_uri !~ ^/prefix) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            	rewrite ^(.*)$ /prefix/$1 break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;5-rewrite-log指令&quot;&gt;&lt;a href=&quot;#5-rewrite-log指令&quot; class=&quot;headerlink&quot; title=&quot;5. rewrite_log指令&quot;&gt;&lt;/a&gt;5. rewrite_log指令&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rewrite_log on | off;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以在http/server/location/if等指令中使用.&lt;br&gt;启动rewrite log(写到文件error_log), 日志级别为notice.  &lt;/p&gt;
&lt;h5 id=&quot;6-set指令&quot;&gt;&lt;a href=&quot;#6-set指令&quot; class=&quot;headerlink&quot; title=&quot;6. set指令&quot;&gt;&lt;/a&gt;6. set指令&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;set $variable value;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;ngx_http_rewr
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="nginx" scheme="http://zenvv.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>视频编码的颜色空间</title>
    <link href="http://zenvv.com/2016/05/24/video-colorspace/"/>
    <id>http://zenvv.com/2016/05/24/video-colorspace/</id>
    <published>2016-05-24T00:18:00.000Z</published>
    <updated>2016-05-24T00:36:08.124Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;简单来说，视频编解码即是对构成图像的颜色进行处理，减少表达颜色效果所需要的比特数。&lt;br&gt;颜色效果是由颜色空间(colorspace)来表达，在视频编解码中常用的有两种: RGB和YUV。&lt;/p&gt;
&lt;h3 id=&quot;1-RGB和YUV&quot;&gt;&lt;a href=&quot;#1-RGB和YUV&quot; class=&quot;headerlink&quot; title=&quot;1. RGB和YUV&quot;&gt;&lt;/a&gt;1. RGB和YUV&lt;/h3&gt;&lt;p&gt;RGB即三基色(红绿蓝)，是日常生活中使用的一种表达方式。&lt;br&gt;三种基色的地位基本平等，在计算机里也基本由同样bit数来表达(当然也存在类似RGB565的)。  &lt;/p&gt;
&lt;p&gt;而YUV是根据人眼视觉系统的特性而定义的一种颜色空间。&lt;br&gt;其基本理论是：人眼对亮度信息比色度和饱和度更为敏感。&lt;br&gt;因而可以通过对亮度信息分配更多的bit并减少饱和度bit数，从整体上减少bit数而不减弱观看效果，起到压缩效果。&lt;/p&gt;
&lt;p&gt;YUV常见的格式有: I420, YV12, NV12, NV21, 其像素排布如下&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;I420:   (1Y) + (1/4U) + (1/4V), | Y...Y | U..U | V..V |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;YV12:   (1Y) + (1/4U) + (1/4V), | Y...Y | V..V | U..U |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NV12:   (1Y) + (1/4U) + (1/4V), | Y...Y | UVUV.. |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NV21:   (1Y) + (1/4U) + (1/4V), | Y...Y | VUVU.. |&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-YUV内存分布&quot;&gt;&lt;a href=&quot;#2-YUV内存分布&quot; class=&quot;headerlink&quot; title=&quot;2. YUV内存分布&quot;&gt;&lt;/a&gt;2. YUV内存分布&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://github.com/PeterXu/wiki-streaming/raw/master/trunk/res/colorspace_data.png&quot; alt=&quot;YUV_DATA&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-YUV转换示例&quot;&gt;&lt;a href=&quot;#3-YUV转换示例&quot; class=&quot;headerlink&quot; title=&quot;3. YUV转换示例&quot;&gt;&lt;/a&gt;3. YUV转换示例&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# color convert&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void convert_nv21_to_i420(const char *src, char *dst, int stride, int height)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int ysize = stride * height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int usize = ysize / 4;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    char *udst = dst + ysize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    char *vdst = dst + ysize + usize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const char *vusrc = src + ysize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /* copy y color */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    memcpy(dst, src, ysize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /* copy u and v color */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (int i=0; i &amp;lt; usize; i++) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        udst[i] = vusrc[i*2+1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vdst[i] = vusrc[i*2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;简单来说，视频编解码即是对
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="media" scheme="http://zenvv.com/tags/media/"/>
    
  </entry>
  
  <entry>
    <title>consul集群建立及使用方式</title>
    <link href="http://zenvv.com/2016/05/17/consul-cluster-config/"/>
    <id>http://zenvv.com/2016/05/17/consul-cluster-config/</id>
    <published>2016-05-17T07:04:00.000Z</published>
    <updated>2016-05-23T07:29:44.924Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;consul是一种为分布式系统提供查询服务的系统, 既可以支持HTTP REST的方式提供服务, 也支持DNS接口与已有的dns服务集成.&lt;/p&gt;
&lt;p&gt;为了维持consul的高可用性, 一般通过集群的方式对分布式系统提供服务, 集群创建方法如下.&lt;/p&gt;
&lt;h3 id=&quot;1-在各节点中启动consul-server&quot;&gt;&lt;a href=&quot;#1-在各节点中启动consul-server&quot; class=&quot;headerlink&quot; title=&quot;1. 在各节点中启动consul server&quot;&gt;&lt;/a&gt;1. 在各节点中启动consul server&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;agent -bind NODE1_IP -client 0.0.0.0 -data-dir /consul/data -config-dir /consul/config -ui -dc dc_consul -rejoin -server -bootstrap-expect=2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;agent -bind NODE2_IP -client 0.0.0.0 -data-dir /consul/data -config-dir /consul/config -ui -dc dc_consul -rejoin -server -bootstrap-expect=2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;agent -bind NODE3_IP -client 0.0.0.0 -data-dir /consul/data -config-dir /consul/config -ui -dc dc_consul -rejoin -server -bootstrap-expect=2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;-client: 绑定的客户端地址(HTTP/DNS/RPC), 默认为127.0.0.1;&lt;br&gt;-data-dir: agent数据存放路径;&lt;br&gt;-config-dir: agent配置加载路径;&lt;br&gt;-ui: 启动内建web管理界面;&lt;br&gt;-dc: datacenter名称;&lt;br&gt;-rejoin: agent自动重新加入集群即使之前已主动退出&lt;br&gt;-server: agent运行模式;&lt;br&gt;-bootstrap-expect: datacenter中需求的最少server数目.  &lt;/p&gt;
&lt;h3 id=&quot;2-建立集群&quot;&gt;&lt;a href=&quot;#2-建立集群&quot; class=&quot;headerlink&quot; title=&quot;2. 建立集群&quot;&gt;&lt;/a&gt;2. 建立集群&lt;/h3&gt;&lt;p&gt;在其中一个节点中(例如在node1), 添加其余server节点&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;consul join $&amp;#123;NODE2_IP&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;consul join $&amp;#123;NODE3_IP&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-consul服务方式&quot;&gt;&lt;a href=&quot;#3-consul服务方式&quot; class=&quot;headerlink&quot; title=&quot;3. consul服务方式&quot;&gt;&lt;/a&gt;3. consul服务方式&lt;/h3&gt;&lt;p&gt;应用程序有以下几种方式使用consul集群服务, 具体如下&lt;br&gt;a. 直接连接集群中的任一个consul server;&lt;br&gt;b. 设置haproxy(+keepalived)代理consul集群, 通过haproxy提供服务;&lt;br&gt;c. 建立consul client然后连接client提供服务&lt;/p&gt;
&lt;h3 id=&quot;4-创建client&quot;&gt;&lt;a href=&quot;#4-创建client&quot; class=&quot;headerlink&quot; title=&quot;4. 创建client&quot;&gt;&lt;/a&gt;4. 创建client&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;agent -advertise $&amp;#123;client_ip&amp;#125; -client 0.0.0.0 -data-dir /consul/data -config-dir /consul/config -ui -dc dc_consul -rejoin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;consul join $&amp;#123;NODE1_IP&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为防止单点故障, 每一个应用程序都可以建立属于自己的client服务.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;consul是一种为分布式
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>lsyncd+rsync文件同步</title>
    <link href="http://zenvv.com/2016/05/15/lsyncd-rsync-config/"/>
    <id>http://zenvv.com/2016/05/15/lsyncd-rsync-config/</id>
    <published>2016-05-15T03:02:00.000Z</published>
    <updated>2016-05-23T07:28:47.001Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;Lsyncd (Live Syncing Daemon), 用于实时将本地文件备份到远程目录, 集成了inotify/fsevents服务, 能够支持rsync/ssh多种数据同步方式.&lt;/p&gt;
&lt;p&gt;这里将介绍lsyncd+rsync的基本使用.&lt;/p&gt;
&lt;h3 id=&quot;1-简单示例&quot;&gt;&lt;a href=&quot;#1-简单示例&quot; class=&quot;headerlink&quot; title=&quot;1. 简单示例&quot;&gt;&lt;/a&gt;1. 简单示例&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lsyncd -rsync /home remotehost.org::share/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;监控本地目录/home的文件事件, 实时将其更新到远程rsync服务share模块的目的目录中.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lsyncd -rsyncssh /home remotehost.org backup-home/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;监控本地目录/home的文件事件, 但通过ssh实时将其更新到远程目录backup-home中. (需要设置ssh为无密码登录).&lt;/p&gt;
&lt;h3 id=&quot;2-lsyncd-rsync模式&quot;&gt;&lt;a href=&quot;#2-lsyncd-rsync模式&quot; class=&quot;headerlink&quot; title=&quot;2. lsyncd+rsync模式&quot;&gt;&lt;/a&gt;2. lsyncd+rsync模式&lt;/h3&gt;&lt;h4 id=&quot;0-基本数据流&quot;&gt;&lt;a href=&quot;#0-基本数据流&quot; class=&quot;headerlink&quot; title=&quot;0). 基本数据流&quot;&gt;&lt;/a&gt;0). 基本数据流&lt;/h4&gt;&lt;p&gt;a. 源节点: lsyncd服务端 + rsync客户端&lt;br&gt;b. 目的节点: rsyncd服务端&lt;/p&gt;
&lt;p&gt;数据流方向: 将文件从源节点中备份到目的节点的存储空间中.&lt;/p&gt;
&lt;h4 id=&quot;1-源文件端&quot;&gt;&lt;a href=&quot;#1-源文件端&quot; class=&quot;headerlink&quot; title=&quot;1). 源文件端&quot;&gt;&lt;/a&gt;1). 源文件端&lt;/h4&gt;&lt;h5 id=&quot;a-lsyncd服务配置文件&quot;&gt;&lt;a href=&quot;#a-lsyncd服务配置文件&quot; class=&quot;headerlink&quot; title=&quot;a. lsyncd服务配置文件&quot;&gt;&lt;/a&gt;a. lsyncd服务配置文件&lt;/h5&gt;&lt;p&gt;/etc/lsyncd/lsyncd.conf&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;settings &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    logfile         = &amp;quot;/var/log/lsyncd.log&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    statusFile      = &amp;quot;/var/run/lsyncd.status&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nodaemon        = false,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    statusInterval  = 10,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    inotifyMode     = &amp;quot;CloseWrite&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    maxProcesses    = 4,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    maxDelays       = 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sync &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    default.rsync,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    source      = &amp;quot;/tmp/src&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    target      = &amp;quot;rsync_user@192.168.10.10::rsync_mod&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -- init        = false,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    delay       = 30,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    exclude     = &amp;#123; &amp;quot;lost+found&amp;quot;, &amp;quot;.tmp&amp;quot;, &amp;quot;.*&amp;quot; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -- excludeFrom = &amp;quot;/etc/rsync_exclude.lst&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    delete      = &amp;quot;running&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rsync       = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        binary      = &amp;quot;/usr/bin/rsync&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        password_file = &amp;quot;/etc/lsyncd/rsyncd.pass&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _extra = &amp;#123;&amp;quot;--temp-dir=/tmp/&amp;quot;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bwlimit     = 4096, -- kb/s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        archive     = true,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        compress    = true,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        verbose     = true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;stausFile: 定义状态文件, 记录已经处理的事件.&lt;br&gt;nodaemon=false: 表示启用守护模式，默认前端模式.&lt;br&gt;statusInterval: 将lsyncd的状态写入上面的statusFile的间隔，默认10秒.&lt;br&gt;inotifyMode: 指定inotify监控的事件，默认是CloseWrite.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Modify&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CloseWrite&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CloseWrite or Modify&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;maxProcesses: 同步进程(如rsync/ssh)的最大个数.&lt;br&gt;maxDelays: 累计到多少监控的事件激活一次同步，即使sync中delay延迟时间还未到.  &lt;/p&gt;
&lt;p&gt;sync同步参数:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;default.rsync: 使用rsync进行备份(本地或远程);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default.direct: 使用cp/rm等命令进行本地备份;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default.rsyncssh: 同步到远程主机目录，rsync的ssh模式;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;source: 源目录，使用绝对路径;&lt;br&gt;target: 支持配置如下,&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a) rsync远程目录同步(如remote_host::rsync_mod), 用于rsync模式    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b) 本地目录同步(如/tmp/dest), 可用于direct和rsync模式  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c) ssh远程目录同步(remote_host:/tmp/dest): 可用于rsync和rsyncssh模式&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;init: 当init = false, 只同步进程启动以后发生改动事件的文件，原有目录即使有差异也不会同步; 默认是true(但不能显示设置init = true).&lt;br&gt;delay: 累计事件延迟时间默认15秒, 避免过于频繁的同步.&lt;/p&gt;
&lt;p&gt;delete: 保持target与souce同步.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;delete	=	true	Default. Lsyncd will delete on the target whatever is not in the source. At startup and what&amp;apos;s being deleted during normal operation.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;delete	=	false	Lsyncd will not delete any files on the target. Not on startup nor on normal operation. (Overwrites are possible though)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;delete	=	&amp;apos;startup&amp;apos;	Lsyncd will delete files on the target when it starts up but not on normal operation.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;delete	=	&amp;apos;running&amp;apos;	Lsyncd will not delete files on the target when it starts up but will delete those that are removed during normal operation.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;bwlimit: rsync同步限速(kb/s).&lt;br&gt;compress: 压缩传输默认为true.&lt;br&gt;perms: 默认保留文件权限.  &lt;/p&gt;
&lt;p&gt;注意: lsyncd.conf可以有多个sync模块，独立配置互不影响。&lt;/p&gt;
&lt;h5 id=&quot;b-配置rsync密码&quot;&gt;&lt;a href=&quot;#b-配置rsync密码&quot; class=&quot;headerlink&quot; title=&quot;b. 配置rsync密码&quot;&gt;&lt;/a&gt;b. 配置rsync密码&lt;/h5&gt;&lt;p&gt;密码文件/etc/lsyncd/rsyncd.pass:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rsyncd_password&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;设置密码文件权限&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;chown root:root /etc/lsyncd/rsyncd.pass&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod 0400 /etc/lsyncd/rsyncd.pass&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;2-目的文件端&quot;&gt;&lt;a href=&quot;#2-目的文件端&quot; class=&quot;headerlink&quot; title=&quot;2). 目的文件端&quot;&gt;&lt;/a&gt;2). 目的文件端&lt;/h4&gt;&lt;h5 id=&quot;a-rsyncd服务端&quot;&gt;&lt;a href=&quot;#a-rsyncd服务端&quot; class=&quot;headerlink&quot; title=&quot;a. rsyncd服务端&quot;&gt;&lt;/a&gt;a. rsyncd服务端&lt;/h5&gt;&lt;p&gt;配置文件/etc/rsyncd.conf&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# sample rsyncd.conf configuration file&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# GLOBAL OPTIONS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;motd file=/etc/motd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log file=/var/log/rsyncd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# for pid file, do not use /var/run/rsync.pid if&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# you are going to run rsync out of the init.d script.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# The init.d script does its own pid file handling,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# so omit the &amp;quot;pid file&amp;quot; line completely in that case.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pid file=/var/run/rsyncd.pid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;syslog facility=daemon&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#socket options=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# MODULE OPTIONS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[rsync_mod]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;comment = public archive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;path = /mnt/backup/data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use chroot = no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max connections = 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lock file = /var/lock/rsyncd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;read only = no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hosts allow = 192.168.0.1/24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;uid = root&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gid = root&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;auth users = rsync_user&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;secrets file = /etc/rsyncd.scrt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;strict modes = yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timeout = 600&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#refuse options = checksum dry-run&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dont compress = *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz *.png *.jpg *.jpeg *.gif&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;b-配置rsyncd密码&quot;&gt;&lt;a href=&quot;#b-配置rsyncd密码&quot; class=&quot;headerlink&quot; title=&quot;b. 配置rsyncd密码&quot;&gt;&lt;/a&gt;b. 配置rsyncd密码&lt;/h5&gt;&lt;p&gt;密码文件/etc/rsyncd.scrt:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rsync_user:rsyncd_password&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;设置密码文件权限&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;chown root:root /etc/rsyncd.scrt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod 0400 /etc/rsyncd.scrt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;c-启动rsyncd服务&quot;&gt;&lt;a href=&quot;#c-启动rsyncd服务&quot; class=&quot;headerlink&quot; title=&quot;c. 启动rsyncd服务&quot;&gt;&lt;/a&gt;c. 启动rsyncd服务&lt;/h5&gt;&lt;p&gt;在ubuntu上默认rsyncd服务不能通过init.d/upstart启动, 需要修改配置文件/etc/default/rsync:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RSYNC_ENABLE=false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;修改为&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RSYNC_ENABLE=true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;Lsyncd (Live 
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>视频格式</title>
    <link href="http://zenvv.com/2016/05/12/video-format/"/>
    <id>http://zenvv.com/2016/05/12/video-format/</id>
    <published>2016-05-12T02:38:00.000Z</published>
    <updated>2016-05-24T00:41:32.154Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;视频格式属于一般的通俗统称，具体来说，可以进一步分为视频容器格式和视频编码格式。&lt;/p&gt;
&lt;p&gt;视频容器用于封装具体的视频编码数据，但是由于某些视频容器只针对某种特殊的视频编码.&lt;br&gt;故而一般将这两种混为一体而不加区分，如rmvb格式视频即表明该容器是rmvb, 视频编码也是rmvb. &lt;/p&gt;
&lt;p&gt;而avi则可以支持多种视频格式，如h264/mpeg4/vc1等等, 这时avi只表示其封装格式.&lt;br&gt;如果需要播放该视频，则需要解析出其视频编码格式启动相应的视频解码器才能播放。&lt;/p&gt;
&lt;p&gt;常见的视频容器格式有: rmvb, mkv, avi, mp4, ts, vob等。&lt;br&gt;常见的视频编码格式有: rmvb, vc1, h264, mpeg4, mpeg2等.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;视频格式属于一般的通俗统称
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="media" scheme="http://zenvv.com/tags/media/"/>
    
  </entry>
  
  <entry>
    <title>glusterfs文件同步</title>
    <link href="http://zenvv.com/2016/05/10/glusterfs3-by-talk/"/>
    <id>http://zenvv.com/2016/05/10/glusterfs3-by-talk/</id>
    <published>2016-05-10T09:49:00.000Z</published>
    <updated>2016-05-23T06:27:39.344Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;rsync是一种常用的远程文件同步方法, 这里将就其几种常用方式及与glusterfs的配合使用, 作简单介绍.&lt;/p&gt;
&lt;h3 id=&quot;1-rsync&quot;&gt;&lt;a href=&quot;#1-rsync&quot; class=&quot;headerlink&quot; title=&quot;1. rsync&quot;&gt;&lt;/a&gt;1. rsync&lt;/h3&gt;&lt;p&gt;可以对节点间的数据作完全同步, 不能处理增量数据, 因此只能周期性的运行.&lt;/p&gt;
&lt;p&gt;适合作小数据的同步或者大数据的离线同步. &lt;/p&gt;
&lt;h3 id=&quot;2-inotify-rsync&quot;&gt;&lt;a href=&quot;#2-inotify-rsync&quot; class=&quot;headerlink&quot; title=&quot;2. inotify + rsync&quot;&gt;&lt;/a&gt;2. inotify + rsync&lt;/h3&gt;&lt;p&gt;在rsync的基础上添加inotify服务, 监控内核文件事件处理增量数据服务. &lt;/p&gt;
&lt;p&gt;该方案对增量处理没有容错能力, 只能处理inotify服务正常运行中的事件,&lt;br&gt;故而运行一段时间后, 则数据同步不完整.&lt;/p&gt;
&lt;p&gt;可以辅助周期性的完全同步, 保证节点间的数据一致.&lt;/p&gt;
&lt;h3 id=&quot;3-lsyncd-rsync&quot;&gt;&lt;a href=&quot;#3-lsyncd-rsync&quot; class=&quot;headerlink&quot; title=&quot;3. lsyncd + rsync&quot;&gt;&lt;/a&gt;3. lsyncd + rsync&lt;/h3&gt;&lt;p&gt;使用lsyncd服务代替inotify服务, 在一定程度上保证其首次启动后的所有事件.&lt;br&gt;也即是除首次需要作数据完全同步之后, 后续由lsyncd保障数据增量服务(即使服务重启或网络中断也可以恢复).&lt;/p&gt;
&lt;p&gt;与inotify类似的是, 需要监控内核文件事件, 通常只能处理节点的本地文件系统.&lt;/p&gt;
&lt;h3 id=&quot;4-glusterfs&quot;&gt;&lt;a href=&quot;#4-glusterfs&quot; class=&quot;headerlink&quot; title=&quot;4. glusterfs&quot;&gt;&lt;/a&gt;4. glusterfs&lt;/h3&gt;&lt;p&gt;glusterfs可以通过rsync从某个节点的本地文件系统获取数据, 方式如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rsync -PavhS --xattrs --ignore-existing /data/remote_dir/ client:/mnt/gluster&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;对于glusterfs这种分布式文件系统, 没有内核事件的支持, 导致没有办法使用inotify或lsyncd支持增量处理.&lt;/p&gt;
&lt;p&gt;故而直接使用rsync这种方式, 只能周期性的运行完全同步对数据进行同步备份.&lt;/p&gt;
&lt;p&gt;glusterfs通常作为大数据存储服务, 这种完全同步方式性能消耗大, 同步不及时.&lt;/p&gt;
&lt;p&gt;在glusterfs3.x及以后版本, 原生支持一种异地备份服务 - geo-replication.&lt;br&gt;geo-replication是基于ssh和rsync工具实现的一套文件同步系统, 其中, ssh用于信息控制交互, rsync用于数据同步. 相关的具体命令如下&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gluster volume geo-replication &amp;lt;master_volume&amp;gt; config allow-network ::1,127.0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume geo-replication &amp;lt;master_volume&amp;gt; start|stop|status&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# local (system and gluster)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume geo-replication &amp;lt;master_volume&amp;gt; file:///path/to/dir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume geo-replication &amp;lt;master_volume&amp;gt; /path/to/dir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume geo-replication &amp;lt;master_volume&amp;gt; gluster://localhost:volname&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume geo-replication &amp;lt;master_volume&amp;gt; :volname&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# remote (system and gluster)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume geo-replication &amp;lt;master_volume&amp;gt; ssh://root@remote-host:/path/to/dir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume geo-replication &amp;lt;master_volume&amp;gt; root@remote-host:/path/to/dir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume geo-replication &amp;lt;master_volume&amp;gt; ssh://root@remote-host:gluster://localhost:volname&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume geo-replication &amp;lt;master_volume&amp;gt; root@remote-host::volname&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume geo-replication &amp;lt;master_volume&amp;gt; gluster://host:volname&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume geo-replication &amp;lt;master_volume&amp;gt; host:volname&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume geo-replication dist_repl_vol slave::dist_repl_vol config use_tarssh false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;geo-replication支持如下几种同步方式&lt;br&gt;1). master gluster volume   -&amp;gt;  slave local filesystem&lt;br&gt;这种方式比较简单, gluster内建文件事件, 处理增量数据发送到远程slave节点.&lt;/p&gt;
&lt;p&gt;2). master gluster volume   -&amp;gt;  slave gluster volume&lt;br&gt;glusterfs-glusterfs同步要求两个volume类型及参数一致.&lt;/p&gt;
&lt;h3 id=&quot;5-同步示例&quot;&gt;&lt;a href=&quot;#5-同步示例&quot; class=&quot;headerlink&quot; title=&quot;5. 同步示例&quot;&gt;&lt;/a&gt;5. 同步示例&lt;/h3&gt;&lt;p&gt;这里以distribute replica voluem(replica: 2, total: 4)为例.&lt;br&gt;卷名为dist_replica_vol, master节点node1/node2/node3/node4, 创建方式如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gluster volume create dist_replica_vol replicat 2 node1:/data node2:/data node3:/data node4:/data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;slave节点分别为snode1/snode2/snode3/snode4, 卷名为dist_replica_vol, 创建方式如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gluster volume create dist_replica_vol replicat 2 snode1:/data snode2:/data snode3:/data snode4:/data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;同步方式, 将master数据同步到slave节点上, 具体如下.&lt;/p&gt;
&lt;p&gt;a. 请使用root用户进行同步, 其它用户潜在问题多.&lt;br&gt;b. 设置可以通过ssh root without-password方式从master访问slave.&lt;br&gt;对于ubuntu用户, 需要修改/etc/ssh/sshd_config:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;PermitRootLogin without-password&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;改为&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PermitRootLogin yes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在master端用root用户生成ssh public/private key, 然后将id_rsa.pub拷贝到slave上, 并将其内容添加到/root/.ssh/.authroity_keys中即可.&lt;/p&gt;
&lt;p&gt;c. 在master端创建geo-replication&lt;br&gt;在该master卷dist_replica_vol中的任一节点上, 如在node1中创建geo-replication volume, 如此node1和node2成为geo-replication volume的active节点, node3/node4是passive节点, 而数据处理则全部在active节点中运行.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# create pem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster system:: execute gsec_create&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# create geo-replication volume &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume geo-replication dist_repl_vol snode1::dist_repl_vol create push-pem [force]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# do operations&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume geo-replication dist_repl_vol snode1::dist_repl_vol start|stop|pause|status&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;d. 错误处理&lt;br&gt;如果出现key或者gsyncd错误, 在所有gluster节点中(本地和远程)运行以下脚本&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp -f /root/.ssh/id_rsa /var/lib/glusterd/geo-replication/secret.pem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp -f /root/.ssh/id_rsa /var/lib/glusterd/geo-replication/tar_ssh.pem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp -f /root/.ssh/id_rsa.pub /var/lib/glusterd/geo-replication/secret.pem.pub&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp -f /root/.ssh/id_rsa.pub /var/lib/glusterd/geo-replication/tar_ssh.pem.pub&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir -p /nonexistent/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ln -s /usr/lib/x86_64-linux-gnu/glusterfs/gsyncd /nonexistent/gsyncd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;exit 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;rsync是一种常用的远程
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>docker杂谈</title>
    <link href="http://zenvv.com/2016/05/02/docker-by-talk/"/>
    <id>http://zenvv.com/2016/05/02/docker-by-talk/</id>
    <published>2016-05-02T02:45:00.000Z</published>
    <updated>2016-05-21T05:38:50.700Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;在云技术时代, 开发由前端(如h5/js/css)和后端技术(如python/jsp/php)等两部分组成, 这其中存在哪些变化呢? &lt;/p&gt;
&lt;p&gt;明显看到这个开发链中没有相关的底层架构技术, 是因为这些不重要吗? 当然不是. &lt;/p&gt;
&lt;p&gt;主要得益于架构技术的迅速发展, 如今已经形成一套成型的接口, 对于开发者而言, 只需调用这些接口(如REST), 即可对数据进行各种处理(而自行搭建难度系数太大).&lt;/p&gt;
&lt;p&gt;在架构服务的发展中, 其中一个最基本的就是虚拟技术的发展, 代表产品如vmware/xen/kvm等, 这些构建了如今互联网架构格局的基础设施.&lt;/p&gt;
&lt;p&gt;在云浪潮中, 许多颠覆性的技术得到迅速发展并成熟, 如aws/google cloud/openstack/docker等. &lt;/p&gt;
&lt;p&gt;本文将就其中的docker技术谈谈自己的感想.&lt;/p&gt;
&lt;p&gt;docker字面意思是码头工人, 主要任务是处理各种集装箱(container).&lt;/p&gt;
&lt;p&gt;docker是一种建立在lxc基础上的上层容器技术, 与xen/kvm等相比, 更像一个增强的chroot.&lt;/p&gt;
&lt;h4 id=&quot;xen-kvm介绍&quot;&gt;&lt;a href=&quot;#xen-kvm介绍&quot; class=&quot;headerlink&quot; title=&quot;xen/kvm介绍&quot;&gt;&lt;/a&gt;xen/kvm介绍&lt;/h4&gt;&lt;p&gt;xen/kvm实现了真正意义上的虚拟化方案, 能够提供完全的物理隔离功能.&lt;br&gt;各个虚拟主机具有独立的内核和运行空间.&lt;/p&gt;
&lt;h4 id=&quot;chroot&quot;&gt;&lt;a href=&quot;#chroot&quot; class=&quot;headerlink&quot; title=&quot;chroot&quot;&gt;&lt;/a&gt;chroot&lt;/h4&gt;&lt;p&gt;通常情况下, 程序运行时的根目录即是OS的根目录(‘/‘).&lt;br&gt;chroot是什么? 全称是change root, 能够改变程序运行时的根目录. &lt;/p&gt;
&lt;h4 id=&quot;LXC是什么&quot;&gt;&lt;a href=&quot;#LXC是什么&quot; class=&quot;headerlink&quot; title=&quot;LXC是什么&quot;&gt;&lt;/a&gt;LXC是什么&lt;/h4&gt;&lt;p&gt;LXC全称linux containers, 是一种封装linux内核容器功能的用户空间接口. LXC通过API和工具可以方便地构建和管理系统或应用程序容器. &lt;/p&gt;
&lt;p&gt;LXC使用的linux内核功能有:&lt;br&gt;a. 内核命名空间(ipc, uts, mount, pid, network and user)&lt;br&gt;b. 安全访问技术Apparmor和selinux配置&lt;br&gt;c. 沙箱Seccomp策略&lt;br&gt;d. chroots技术(使用pivot_root)&lt;br&gt;e. 内核容量&lt;br&gt;f. CGroups(control group)  &lt;/p&gt;
&lt;p&gt;LXC容器可以被当作是chroot和那些完整虚拟机如xen/kvm的中间地带.&lt;br&gt;其目标是尽可能创建一个类似linux标准安装版无需独立内核的运行环境.&lt;/p&gt;
&lt;h4 id=&quot;docker又是什么&quot;&gt;&lt;a href=&quot;#docker又是什么&quot; class=&quot;headerlink&quot; title=&quot;docker又是什么&quot;&gt;&lt;/a&gt;docker又是什么&lt;/h4&gt;&lt;p&gt;你可以认为, docker是一个加强版的LXC.&lt;/p&gt;
&lt;p&gt;docker是一个轻量级开源安全的应用容器引擎, 能够将应用程序及其依赖打包进行软件部署.&lt;/p&gt;
&lt;p&gt;docker建立在aufs分层文件系统基础上, 能够运行在主机内核中并高效启动利用主机资源.&lt;/p&gt;
&lt;h5 id=&quot;轻量级&quot;&gt;&lt;a href=&quot;#轻量级&quot; class=&quot;headerlink&quot; title=&quot;轻量级&quot;&gt;&lt;/a&gt;轻量级&lt;/h5&gt;&lt;p&gt;运行在同一个主机上的容器共享相同的操作系统内核, 因而容器可以被迅速启动并高效利用系统内存. 在aufs分层文件系统基础上构建的应用镜像, 可以方便的分享文件,利用磁盘和镜像下载.&lt;/p&gt;
&lt;h5 id=&quot;开放&quot;&gt;&lt;a href=&quot;#开放&quot; class=&quot;headerlink&quot; title=&quot;开放&quot;&gt;&lt;/a&gt;开放&lt;/h5&gt;&lt;p&gt;docker容器基于开放标准, 很容易在linux/mac/windows等操作系统中运行.&lt;/p&gt;
&lt;h5 id=&quot;安全&quot;&gt;&lt;a href=&quot;#安全&quot; class=&quot;headerlink&quot; title=&quot;安全&quot;&gt;&lt;/a&gt;安全&lt;/h5&gt;&lt;p&gt;容器能够很好的隔离彼此间的应用程序, 并为应用程序添加一个额外保护层.&lt;br&gt;docker提供了内存/cpu等资源隔离, 并在沙盒中运行, 但是在安全性方面还不成熟.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;在云技术时代, 开发由前端
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>分布式文件系统 - glusterfs</title>
    <link href="http://zenvv.com/2016/05/01/glusterfs2-by-talk/"/>
    <id>http://zenvv.com/2016/05/01/glusterfs2-by-talk/</id>
    <published>2016-05-01T02:26:00.000Z</published>
    <updated>2016-05-06T03:00:48.085Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;分布式文件系统自身架构也可以分为集中式和分布式两种, 典型的gluster属于前者, ceph属于后者, 孰优孰劣暂不作评论, 这里将就gluster相关概念和使用方法作介绍.&lt;/p&gt;
&lt;h3 id=&quot;1-glusterfs简述&quot;&gt;&lt;a href=&quot;#1-glusterfs简述&quot; class=&quot;headerlink&quot; title=&quot;1. glusterfs简述&quot;&gt;&lt;/a&gt;1. glusterfs简述&lt;/h3&gt;&lt;p&gt;gluster是基于一致性hash算法的纯分布式架构的分布式文件系统.  &lt;/p&gt;
&lt;p&gt;从服务架构上分析, 仅存在一种节点即数据服务节点, 无单点故障.&lt;br&gt;从系统功能上分析, 可以分成两类节点: client节点和数据服务节点.  &lt;/p&gt;
&lt;p&gt;client节点并不存在于gluster的服务端架构中. 当应用程序需要存储服务时, 才会启动client节点为其提供服务. 实际进行各种存储调度算法逻辑, 以及保证数据的一致性和可靠性都是在client节点中进行处理. 每一个应用程序均可以拥有独立的client节点.&lt;/p&gt;
&lt;p&gt;而服务节点是正常提供数据的被动数据存储服务, 当然也有一些内建的各种数据保障服务.  &lt;/p&gt;
&lt;p&gt;可以看到, 对于gluster系统的升级, 通常需要同时升级服务端和客户端, 由于许多新功能和调度算法都是通过client进行实现的. 闲扯下, 21世纪初p2p技术大行天下的那几年, 对于同样的服务端(tracker), 各种p2p客户端(bt/emule/bitcomet)下载的效果大不相同.  &lt;/p&gt;
&lt;h3 id=&quot;2-glusterfs卷类型&quot;&gt;&lt;a href=&quot;#2-glusterfs卷类型&quot; class=&quot;headerlink&quot; title=&quot;2. glusterfs卷类型&quot;&gt;&lt;/a&gt;2. glusterfs卷类型&lt;/h3&gt;&lt;p&gt;在建立glusterfs服务之前, 就需要明确定义存储的需求.&lt;/p&gt;
&lt;p&gt;如mac osx系统存储一样, glusterfs通过volume对存储进行管理, 每一个volume对应用程序都类似一个disk. 服务支持的volume类型也基本决定了gluster分布式系统的基本架构, 简单来讲决定了gluster中服务节点的数量. &lt;/p&gt;
&lt;p&gt;gluster支持多种类型的volume, 常见如下所示:  &lt;/p&gt;
&lt;h4 id=&quot;a-distribute-volume&quot;&gt;&lt;a href=&quot;#a-distribute-volume&quot; class=&quot;headerlink&quot; title=&quot;a. distribute volume&quot;&gt;&lt;/a&gt;a. distribute volume&lt;/h4&gt;&lt;p&gt;分布卷是glusterfs最基本的卷类型, 最少需要两个节点.&lt;br&gt;&lt;code&gt;$&amp;gt; gluster volume create dist_volume node1:/mnt/brick1/dist1 node2:/mnt/brick1/dist1&lt;/code&gt;&lt;br&gt;根据文件hash值存储到不同节点的brick, 任一个节点失败都会导致数据丢失.&lt;/p&gt;
&lt;h4 id=&quot;b-replica-volume&quot;&gt;&lt;a href=&quot;#b-replica-volume&quot; class=&quot;headerlink&quot; title=&quot;b. replica volume&quot;&gt;&lt;/a&gt;b. replica volume&lt;/h4&gt;&lt;p&gt;复制卷类似于raid1, 最少需要两个节点&lt;br&gt;&lt;code&gt;$&amp;gt; gluster volume create replica_volume replica 2 node1:/mnt/brick1/replica1 node2:/mnt/brick1/replica1&lt;/code&gt;&lt;br&gt;将文件存储到所有节点的brick, 任一个节点失败都不影响数据服务.&lt;/p&gt;
&lt;h4 id=&quot;c-distribute-replica-volume&quot;&gt;&lt;a href=&quot;#c-distribute-replica-volume&quot; class=&quot;headerlink&quot; title=&quot;c. distribute replica volume&quot;&gt;&lt;/a&gt;c. distribute replica volume&lt;/h4&gt;&lt;p&gt;将两个或多个相同的复制卷组合在一起构成分布复制卷, 最少需要4个节点.&lt;/p&gt;
&lt;p&gt;创建方式一: 在2)复制卷上再添加一组&lt;br&gt;&lt;code&gt;$&amp;gt; gluster volume add-brick replica_volume node3:/mnt/brick1/replica1 node4:/mnt/brick1/replica1&lt;/code&gt;&lt;br&gt;replica_volume从复制卷变成一个分布式复制卷.  &lt;/p&gt;
&lt;p&gt;创建方式二: 全新创建&lt;br&gt;&lt;code&gt;$&amp;gt; gluster volume create distribute_replica_volume replica 2 node1:/mnt/brick1/replica1 node2:/mnt/brick1/replica1 node3:/mnt/brick1/replica1 node4:/mnt/brick1/replica1&lt;/code&gt;   &lt;/p&gt;
&lt;p&gt;注意, node1&amp;amp;node2和node3&amp;amp;node4分别是一个复制卷, 然后共同构建成一个分布卷. 在此例中最多可以容忍两个节点失败, 但只能是复制卷1中(node1&amp;amp;node2)的任一个节点, 以及复制卷2(node3&amp;amp;node4)中的任一个节点.&lt;/p&gt;
&lt;p&gt;分布复制卷的存储逻辑是, 首先根据文件的hash值选中一个复制卷, 然后将数据拷贝到这个复制卷中所有节点的brick.&lt;/p&gt;
&lt;h4 id=&quot;d-disperse-volume&quot;&gt;&lt;a href=&quot;#d-disperse-volume&quot; class=&quot;headerlink&quot; title=&quot;d. disperse volume&quot;&gt;&lt;/a&gt;d. disperse volume&lt;/h4&gt;&lt;p&gt;离散卷是一种高级卷，通过rs码构建冗余数据保证数据的可靠性和一致性(类似raid5). 创建方式如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt; gluster volume create disperse_volume disperse 5 redundancy 2  node1:/mnt/brick1/disp1 node2:/mnt/brick1/disp1 node3:/mnt/brick1/disp1 node4:/mnt/brick1/disp1 node5:/mnt/brick1/disp1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;disperse: 离散卷的数目&lt;br&gt;redundancy: 冗余卷的数目&lt;/p&gt;
&lt;p&gt;这里的设置意味着根据5个卷中的任意3个卷可以计算得到所有的存储数据, 也即是说, 五个节点中可以容忍任意2个节点down. 具体设置的优化值请参照官方. 其数据存储逻辑是:　按照2/5冗余值, 从文件内容计算出新内容, 然后将结果存储到五个节点中.&lt;/p&gt;
&lt;h4 id=&quot;e-distribute-disperse-volume&quot;&gt;&lt;a href=&quot;#e-distribute-disperse-volume&quot; class=&quot;headerlink&quot; title=&quot;e. distribute disperse volume&quot;&gt;&lt;/a&gt;e. distribute disperse volume&lt;/h4&gt;&lt;p&gt;类似于分布复制卷, 将多个离散卷进行合并, 即可构成一个分布离散卷. &lt;/p&gt;
&lt;h3 id=&quot;3-glusterfs建立服务&quot;&gt;&lt;a href=&quot;#3-glusterfs建立服务&quot; class=&quot;headerlink&quot; title=&quot;3. glusterfs建立服务&quot;&gt;&lt;/a&gt;3. glusterfs建立服务&lt;/h3&gt;&lt;p&gt;glusterfs所有节点都是平等的, 因此可以简单的从其中任一个节点, 去建立一个完整的分布式网络服务, 如下所示:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt; gluster peer probe host1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt; gluster peer probe host2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt; gluster peer probe host3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt; gluster peer probe host4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt; gluster peer probe host5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt; gluster peer status&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;删除节点操作如下:&lt;br&gt;&lt;code&gt;$&amp;gt; gluster peer detach host5&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;4-glusterfs管理优化&quot;&gt;&lt;a href=&quot;#4-glusterfs管理优化&quot; class=&quot;headerlink&quot; title=&quot;4. glusterfs管理优化&quot;&gt;&lt;/a&gt;4. glusterfs管理优化&lt;/h3&gt;&lt;p&gt;glusterfs卷管理操作命令:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt;gluster volume start|stop|delete &amp;lt;volname&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt;gluster volume add-brick|remove-brick &amp;lt;volname&amp;gt; …&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt;gluster volume rebalance &amp;lt;volname&amp;gt; start|stop|status&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt;gluster volume heal &amp;lt;volname&amp;gt; [full|info..]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt;gluster volume get &amp;lt;volname&amp;gt; all&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt;gluster volume set &amp;lt;volname&amp;gt; key value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt;gluster volume log rotate &amp;lt;volname&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt;gluster volume top &amp;lt;volname&amp;gt; …&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt;gluster volume status all|&amp;lt;volname&amp;gt; …&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt;gluster volume replace-brick &amp;lt;volname&amp;gt; commit force&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt;gluster volume shared profile start|info|stop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;gt;gluster volume profile start|info|stop&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;优化属性(针对小文件)&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Specifies the number of network connections to be handled simultaneously by the client processes &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume set &amp;lt;volname&amp;gt; client.event-threads 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Specifies the number of network connections to be handled simultaneously by the server processes &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume set &amp;lt;volname&amp;gt; server.event-threads 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume set &amp;lt;volname&amp;gt; cluster.lookup-optimize on&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Specifies whether proactive self-healing on replicated volumes is activated.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume set &amp;lt;volname&amp;gt; cluster.self-heal-daemon on|off&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gluster volume set &amp;lt;volname&amp;gt; performance.readdir-ahead on|off&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;控制访问&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;auth.allow *|ip|hostname&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;auth.reject none|ip|hostname&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其它属性设置&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cluster.min-free-disk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cluster.weighted-rebalance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;performance.cache-size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;performance.cache-min-file-size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;performance.cache-max-file-size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;performance.write-behind: off&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server.allow-insecure: on&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cluster.server-quorum-type: server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cluster.quorum-type: auto&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;network.remote-dio: enable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cluster.eager-lock: enable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;performance.stat-prefetch: off&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;performance.io-cache: off&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;performance.read-ahead: off&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;performance.quick-read: off&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;5-glusterfs应用服务&quot;&gt;&lt;a href=&quot;#5-glusterfs应用服务&quot; class=&quot;headerlink&quot; title=&quot;5. glusterfs应用服务&quot;&gt;&lt;/a&gt;5. glusterfs应用服务&lt;/h3&gt;&lt;p&gt;通过以上方式成功建立了glusterfs分布式文件服务. 具体使用还需要在应用程序节点上, 通过gluster client建立虚拟磁盘节点(如使用gluster mount), 随后应用程序即可通过类似访问本地磁盘的方式对gluster磁盘进行数据读取.&lt;br&gt;故而, 各个节点应用程序都可以通过gluster文件系统, 方便地进行数据共享服务.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;分布式文件系统自身架构也可
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title> 数据存储</title>
    <link href="http://zenvv.com/2016/04/29/gluster-by-talk/"/>
    <id>http://zenvv.com/2016/04/29/gluster-by-talk/</id>
    <published>2016-04-29T14:51:00.000Z</published>
    <updated>2016-05-02T02:35:35.453Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;在云互联网时代, 数据存储依然是最基础的平台之一, 那么云时代的存储有些什么变化呢?   &lt;/p&gt;
&lt;h3 id=&quot;1-数据存储&quot;&gt;&lt;a href=&quot;#1-数据存储&quot; class=&quot;headerlink&quot; title=&quot;1. 数据存储&quot;&gt;&lt;/a&gt;1. 数据存储&lt;/h3&gt;&lt;p&gt;所谓数据存储, 即是应用程序产生的数据, 能够从某处进行正常的读取操作.&lt;br&gt;传统方式是将所有数据存放在某以集中式存储设备上, 通过协议(如nas)在多个应用程序之间进行数据共享读取.&lt;br&gt;虽说集中式存储有着高额的价格, 但能够提供简洁稳定可靠高效的服务, 并在各种应用中得到验证.  &lt;/p&gt;
&lt;p&gt;从各种渠道, 我们能获取到对集中式存储重大缺点的归结, 集中于可扩展性差和不菲的价格.&lt;br&gt;但是少年们, 对于中小特别是创业型公司来说, 几个T的集中式存储空间, 真的限制了公司未来的扩展性? 搭建一套分布式云存储真的价格低廉了?&lt;br&gt;个人认为, 云分布式存储, 应该称为云分布式大数据存储较为恰当, 更适合大数据公司.&lt;br&gt;搭建一套分布式云存储并不便宜, 从设备到研发及运维人员都需要一定的成本(facebook/google均定制设备以降低各种成本). 对大数据公司来说, 批量部署分布式系统则将成本大大降低.&lt;/p&gt;
&lt;p&gt;言归正题, 本文将只讨论分布式系统gluster的一些相关技术问题.&lt;br&gt;方便叙述简单, 这里狭义的将分布式云定义为无单点故障的一种架构系统.&lt;/p&gt;
&lt;h3 id=&quot;2-集中式存储&quot;&gt;&lt;a href=&quot;#2-集中式存储&quot; class=&quot;headerlink&quot; title=&quot;2. 集中式存储&quot;&gt;&lt;/a&gt;2. 集中式存储&lt;/h3&gt;&lt;p&gt;采取集中存储方式的架构, 由于存储是个单点, 只能实现不完备的分布式应用程序.&lt;br&gt;若要实现完备的分布式应用程序, 则有以下几种方式:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要多个集中式存储, 且各个存储之间实现实时数据共享.&lt;/li&gt;
&lt;li&gt;需要多个集中式存储, 需要应用程序自身拥有分布式特性.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第一种, 在传统大型应用中也存在不少, 成本高昂.&lt;br&gt;第二种, 要求各应用程序支持分布式特性, 在近几年涌现的各种服务软件中得到极大的支持, 如各种nosql服务. 从原理上分析, 最简单的实现即在各个服务实例之间进行数据同步保持一致性. &lt;/p&gt;
&lt;h3 id=&quot;3-分布式存储&quot;&gt;&lt;a href=&quot;#3-分布式存储&quot; class=&quot;headerlink&quot; title=&quot;3. 分布式存储&quot;&gt;&lt;/a&gt;3. 分布式存储&lt;/h3&gt;&lt;p&gt;集中式存储的第二种方式虽然得到了极大的发展, 但我们无法兼容利用已有的各种服务.&lt;br&gt;如此, 我们急需统一并提供一致的存储接口来支持各种服务, 这中需求由来已久, 并非云时代的产物.&lt;br&gt;其所催发的各种分布式文件系统(Distributed File System)也早先云时代之前应运而生, 但却在大数据的云时代大放光彩.&lt;/p&gt;
&lt;p&gt;当前存在很多成熟的DFS框架, 主流的如moosefs, glusterfs, fastdfs(国内刚开始在chinaunix论坛上首发),tfs(taobao dfs),和大红大紫的openstack swift和ceph.&lt;/p&gt;
&lt;p&gt;已有不少资料对这几种系统做过比较, 下一篇将对glusterfs进行基本的叙述.  &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;在云互联网时代, 数据存储
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>nginx+tomcat完美支持HTTPS</title>
    <link href="http://zenvv.com/2016/04/26/nginx-proxy-https-tomcat/"/>
    <id>http://zenvv.com/2016/04/26/nginx-proxy-https-tomcat/</id>
    <published>2016-04-26T14:07:00.000Z</published>
    <updated>2016-05-02T02:22:59.683Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;之前几篇文章简单描述了nginx和tomcat的一些配置，可以满足一些常规需求。&lt;br&gt;随着互联网安全隐患的频繁发生，现如今安全性已经是一项基本需求，而https则是最基础平台之一。&lt;/p&gt;
&lt;p&gt;在nginx中启用ssl非常简单，只需要几句简单的配置和证书即可。当nginx和tomcat配合使用，其中nginx作为反向代理前端时，该如何实现https呢？&lt;/p&gt;
&lt;p&gt;第一种方法，即在nginx和tomcat中使用同样的证书，打开https功能。&lt;br&gt;nginx接受到用户请求进行解密进行处理，加密请求发送到tomcat；&lt;br&gt;tomcat节点接受到请求解密进行处理，对响应数据进行加密转发回到ningx；&lt;br&gt;最后，nginx需要解密tomcat的响应数据，再重新加密转发给客户端。&lt;/p&gt;
&lt;p&gt;可以看到，整个过程非常复杂，并且tomcat和nginx节点均需要加密解密多次。&lt;/p&gt;
&lt;p&gt;第二种方法，只需要在nginx前端启用ssl, nginx与后台tomcat之间的通信走http/1.0明文。&lt;br&gt;nginx接受用户请求进行解密处理，发送明文请求到tomcat;&lt;br&gt;tomcat对请求明文进行处理，返回响应数据的明文给ningx;&lt;br&gt;最后nginx对tomcat的响应数据加密转发到用户。&lt;/p&gt;
&lt;p&gt;需要注意在第二种方法中，默认tomcat返回的响应明文中的url link全部是http地址。&lt;br&gt;也即是说，用户的第一次请求(逻辑上的首次http get)可以正常返回，随后根据在该返回内容中的访问link都被拒绝，由于这些link（由相对地址转化而来，原本就是绝对url地址除外）都是http而不是https。&lt;/p&gt;
&lt;p&gt;对于这个问题，需要从两方面配置解决，首先在nginx前端代理请求到tomcat时需要附带上用户请求的协议名字schema（http或https）, 配置如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_set_header Host $http_host;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_set_header X-Real-Ip $remote_addr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_set_header X-Forwarded-Proto  $scheme;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_set_header Cookie $http_cookie;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_pass http://tomcat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;X-Forwarded-Proto即是在http header请求中添加用户真实协议，而不是代理协议http.&lt;/p&gt;
&lt;p&gt;其次在tomcat中需要显示使用http head中该字段x-forwarded-proto, 配置如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Valve className=&amp;quot;org.apache.catalina.valves.RemoteIpValve&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   remoteIpHeader=&amp;quot;x-forwarded-for&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   remoteIpProxiesHeader=&amp;quot;x-forwarded-by&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   protocolHeader=&amp;quot;x-forwarded-proto&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;tomcat的mod_remoteip模块将会根据protocolHeader字段和protocolHeaderHttpsValue值作如下逻辑判断：&lt;br&gt;如果protocolHeader对应字段的值与protocolHeaderHttpsValue(默认是https,可以设置)一致且是https，则root url是&lt;a href=&quot;https://ip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://ip&lt;/a&gt;;&lt;br&gt;否则采用&lt;a href=&quot;http://ip作为root&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ip作为root&lt;/a&gt; url,不论用户真实请求的协议.  &lt;/p&gt;
&lt;p&gt;这样，nginx和tomcat搭配的https请求就可以工作了，但这仅仅适用于nginx和tomcat均处于内网中。&lt;/p&gt;
&lt;p&gt;在数据中心中，前端nginx一般位于DMZ区域拥有公网IP地址，而tomcat可能位于局域网中只有内网地址。这时我们会发现以上配置不起作用。&lt;br&gt;由于tomcat默认机制中需要判断代理服务器的IP地址，如果该IP地址是内网网段，则启用以上逻辑否则无效，而转而使用默认规则http处理。&lt;/p&gt;
&lt;p&gt;为了解决这个问题，需要将代理IP(例如a.b.c.d)添加到tomcat的允许区域中，可进行如下配置:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Valve className=&amp;quot;org.apache.catalina.valves.RemoteIpValve&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   remoteIpHeader=&amp;quot;x-forwarded-for&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   remoteIpProxiesHeader=&amp;quot;x-forwarded-by&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   protocolHeader=&amp;quot;x-forwarded-proto&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   internalProxies=&amp;quot;a\.b\.c\.d&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;internalProxies将会覆盖tomcat的默认内网网段设置，这时通过公网ip可以正常访问https，但在内部直接连接tomcat则只能获取到首页内容，类似上面访问nginx的情形。&lt;br&gt;internalProxies支持正则表达式，可以在将nginx代理公网ip和内网网段全部添加进去即可，如下所示:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;internalProxies=&amp;quot;a\.b\.c\.d,10\.*,192\.168\.*&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;既然tomcat已经在数据中心内网中，可以有更简单的设置:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Valve className=&amp;quot;org.apache.catalina.valves.RemoteIpValve&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   remoteIpHeader=&amp;quot;x-forwarded-for&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   remoteIpProxiesHeader=&amp;quot;x-forwarded-by&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   protocolHeader=&amp;quot;.*&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如此，完美解决nginx + tomcat + https的问题。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;之前几篇文章简单描述了ng
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="nginx" scheme="http://zenvv.com/tags/nginx/"/>
    
      <category term="tomcat" scheme="http://zenvv.com/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>keepalived建立HA系统的几种模式</title>
    <link href="http://zenvv.com/2016/04/25/keepalived-by-talk/"/>
    <id>http://zenvv.com/2016/04/25/keepalived-by-talk/</id>
    <published>2016-04-24T17:13:00.000Z</published>
    <updated>2016-05-01T03:04:09.790Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;keepalived是基于虚拟IP通过组播通信建立的一种软件HA系统, 简单有效得到广泛的应用. &lt;/p&gt;
&lt;p&gt;通常有master/backup和backup/backup两种模式, 基本配置构成如下:&lt;br&gt;a). global_defs: 定义全局属性&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;global_defs &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   notification_email &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      test@example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   notification_email_from admin@example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   smtp_server mail.example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   smtp_connect_timeout 30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;b). vrrp_script: 检查应用程序状态&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vrrp_script chk_app &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    script &amp;quot;&amp;lt;/dev/tcp/127.0.0.1/80&amp;quot; # connects and exits&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #script &amp;quot;/etc/keepalived/check_app.sh&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #script &amp;quot;killall -0 nginx&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    interval 3                      # check every 3 seconds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    weight -2                       # default prio: -2 if fails&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;c). vrrp_instance: 服务相关配置如下.  &lt;/p&gt;
&lt;h4 id=&quot;1-master-backup模式&quot;&gt;&lt;a href=&quot;#1-master-backup模式&quot; class=&quot;headerlink&quot; title=&quot;1. master-backup模式&quot;&gt;&lt;/a&gt;1. master-backup模式&lt;/h4&gt;&lt;h5 id=&quot;节点1设置&quot;&gt;&lt;a href=&quot;#节点1设置&quot; class=&quot;headerlink&quot; title=&quot;节点1设置&quot;&gt;&lt;/a&gt;节点1设置&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vrrp_instance VI_1 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    state MASTER            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    garp_master_delay 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    interface eth0          # 设置虚拟ip的iface&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    track_interface &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        eth0				# 监控iface, 可以不是eth0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    virtual_router_id 81	# route id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    priority 100            # 节点优先级&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    advert_int 2			# keepalived节点之间通信间隔&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    authentication &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        auth_type PASS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        auth_pass pass123	# keepalived密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    virtual_ipaddress &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        192.168.10.1/24		# 要设置的虚拟ip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    track_script &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       chk_app&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;state: 标识该节点的初始状态 - MASTER或BACKUP.&lt;br&gt;garp_master_delay: 在切换到master状态后，延迟进行gratuitous ARP请求.&lt;br&gt;track_script的chk_app检测应用程序, 若失败则节点优先级降低(具体值在chk_app的weight中设置).&lt;/p&gt;
&lt;h5 id=&quot;节点2设置&quot;&gt;&lt;a href=&quot;#节点2设置&quot; class=&quot;headerlink&quot; title=&quot;节点2设置&quot;&gt;&lt;/a&gt;节点2设置&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vrrp_instance VI_1 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    state BACKUP            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #nopreempt				# 非抢占模式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    garp_master_delay 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    interface eth0          # 设置虚拟ip的iface&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    track_interface &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        eth0				# 监控iface, 可以不是eth0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    virtual_router_id 81	# 必须与master中一样&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    priority 99             # 比master中小, 需要保证master权限降低时比这个值小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    advert_int 2			# keepalived节点之间通信间隔&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    authentication &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        auth_type PASS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        auth_pass pass123	# keepalived密码, 必须与master中一样 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    virtual_ipaddress &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        192.168.10.1/24		# 要设置的虚拟ip, 必须与master中一样&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    track_script &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       chk_app&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在master-backup模式中,&lt;br&gt;a) 正常情况下, 节点1成为master并设置虚拟IP(vip).&lt;br&gt;b) 节点1检测错误(chk_app)或keepalived失败, 节点2将接管master角色.&lt;br&gt;c) 当节点1恢复正常时, 将重新抢占成为master.  &lt;/p&gt;
&lt;h4 id=&quot;2-backup-backup模式&quot;&gt;&lt;a href=&quot;#2-backup-backup模式&quot; class=&quot;headerlink&quot; title=&quot;2. backup-backup模式&quot;&gt;&lt;/a&gt;2. backup-backup模式&lt;/h4&gt;&lt;p&gt;所有Backup配置如下&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vrrp_instance VI_1 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    state BACKUP            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    garp_master_delay 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    interface eth0          # 设置虚拟ip的iface&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    track_interface &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        eth0				# 监控iface, 可以不是eth0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    virtual_router_id 83	# 必须与master中一样&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #nopreempt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    priority 99             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    advert_int 2			# keepalived节点之间通信间隔&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    authentication &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        auth_type PASS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        auth_pass pass123	# keepalived密码, 必须与master中一样 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    virtual_ipaddress &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        192.168.10.1/24		# 要设置的虚拟ip, 必须与master中一样&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    track_script &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       chk_app&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在backup-backup模式中节点行为如下:&lt;br&gt;a) 假设节点1首先启动, 节点1则成为master并设置vip;&lt;br&gt;b) 如果节点1失败,节点2将自动接管成为master;&lt;br&gt;c) 当节点1恢复时不会抢占master, 除非节点2失败.&lt;/p&gt;
&lt;h4 id=&quot;3-nopreempt属性&quot;&gt;&lt;a href=&quot;#3-nopreempt属性&quot; class=&quot;headerlink&quot; title=&quot;3. nopreempt属性&quot;&gt;&lt;/a&gt;3. nopreempt属性&lt;/h4&gt;&lt;p&gt;在某些情形下, keepalived的自动切换可能导致Brain-Split: 即两个节点都成为master并设置虚拟IP地址.  &lt;/p&gt;
&lt;p&gt;对此, keepalived提供了nopreempt属性, 允许低优先级节点作为master. 该属性只在backup节点中设置有效, 具体如下:&lt;/p&gt;
&lt;p&gt;1) master-backup模式&lt;br&gt;若backup设置nopreempt, 当节点1失败时节点2不会抢占master, 切换方法:&lt;br&gt;a) 手动干预, 如关闭节点1的keepalived程序;&lt;br&gt;b) 自动切换, 在节点1检测脚本中添加逻辑: 若检测失败自动关闭keepalived.&lt;/p&gt;
&lt;p&gt;2) backup-backup模式&lt;br&gt;若backup设置nopreempt, 也需要手动干预或者在检测脚本中自动关闭keepalived.  &lt;/p&gt;
&lt;p&gt;通过关闭无效节点的keepalived服务, 可以有效避免Brain-Split; 但是, 需要手动处理才能恢复失败节点.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;一般情况下, 不设置nopreempt的backup-backup模式即可以满足大多数需求.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;keepalived是基于
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>DNS服务器dnsmasq</title>
    <link href="http://zenvv.com/2016/04/19/dnsmasq-by-talk/"/>
    <id>http://zenvv.com/2016/04/19/dnsmasq-by-talk/</id>
    <published>2016-04-18T16:41:00.000Z</published>
    <updated>2016-04-24T17:07:29.227Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;在构建数据中心网络时, 建立一个独立的dns服务是必不可少的.&lt;/p&gt;
&lt;p&gt;dns服务器有很多种, 如bind9/skydns等, 但是bind9显得笨重难以配置维护, skydns是不错的软件, 在多种分布式系统中被使用, 如google的k8s.&lt;/p&gt;
&lt;p&gt;这里介绍另一种简洁的dns服务软件 - dnsmasq, 配置简单如下所示.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#listen-address=..&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;expand-hosts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;domain=example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cache-size=300&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#no-resolv&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;domain-needed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# for other servers(consul)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server=/consul./127.0.0.1#8600&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# for common domain&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;address=/ntp.io/10.10.10.9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;address=/dns.io/10.10.10.10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;listen-address默认不配置时则在所有ip地址监听.&lt;br&gt;expand-hosts和domain搭配使用, 自动将/etc/hosts中的名字扩展到example.com.&lt;br&gt;no-resolv不使用/etc/resolv.conf对域名解析.&lt;br&gt;domain-needed不转发没有格式的域名.&lt;br&gt;server=..用于某些域名转发到其它dns server, 在这个例子中将所有以.consul为后缀的域名, 转发到127.0.0.1:8600的dns服务器进行解析.&lt;br&gt;address=..用于定义本地网络的dns域名解析.  &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;在构建数据中心网络时, 建
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>系统监控及日志收集elk+beats</title>
    <link href="http://zenvv.com/2016/04/18/elk-beats-by-talk/"/>
    <id>http://zenvv.com/2016/04/18/elk-beats-by-talk/</id>
    <published>2016-04-18T15:13:00.000Z</published>
    <updated>2016-04-24T16:34:15.564Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;针对数据中心的监控, 许多公司积极响应并开源自己的方案, 传统的有nagios和zabbix等.&lt;/p&gt;
&lt;p&gt;当前比较流行的方案有flume/scribe/openfalcon/elk(beats), 这里将具体介绍下elk.&lt;/p&gt;
&lt;p&gt;最新官方建议使用轻量级的beats(golang)取代logstash作为客户端, beats收集数据发送到logstash broker或者直接发送到elasticsearch. &lt;/p&gt;
&lt;p&gt;笔者建议使用beats =&amp;gt; logstash =&amp;gt; elasticsearch =&amp;gt; kibana这种数据流, 利用logstash可以对数据作额外处理以及减少系统耦合性.  &lt;/p&gt;
&lt;h5 id=&quot;beats客户端&quot;&gt;&lt;a href=&quot;#beats客户端&quot; class=&quot;headerlink&quot; title=&quot;beats客户端&quot;&gt;&lt;/a&gt;beats客户端&lt;/h5&gt;&lt;p&gt;beats包含多种工具, 常用的有三种:&lt;br&gt;topbeat: 主要监控系统的cpu/memory/disk, 周期性的收集系统数据.&lt;br&gt;filebeat: 用于收集系统和应用程序日志, 发送日志到logstash作额外处理可以收集感兴趣的信息.&lt;br&gt;packetbeat: 用于嗅探系统网络信息(被动), 如http/mysql/等等.&lt;/p&gt;
&lt;p&gt;但是, topbeat中没有收集linux系统/proc/net基本信息的功能, 而是集成到packetbeat中显得稍笨重不方便使用.&lt;/p&gt;
&lt;h5 id=&quot;logstash&quot;&gt;&lt;a href=&quot;#logstash&quot; class=&quot;headerlink&quot; title=&quot;logstash&quot;&gt;&lt;/a&gt;logstash&lt;/h5&gt;&lt;p&gt;logstash起初是作为elk中的客户端, 但作为一个收集系统基本数据的工具, 而显得太笨重而一直被诟病.&lt;br&gt;尽管如此, logstash提供了许多插件功能极其丰富, 很适合作为broker节点.&lt;/p&gt;
&lt;p&gt;logstash的数据处理通常有三部分构成, 分别对应于三种插件:&lt;br&gt;(1) input插件, 获取数据, 比如监听端口或者从消息队列中订阅数据.&lt;br&gt;(2) filter插件, 对收集到的数据作进一步的处理, 例如解析ip地址为经纬度.&lt;br&gt;(3) output插件, 输出数据到其它服务中,如elasticsearch/kafka/zeromq.  &lt;/p&gt;
&lt;h5 id=&quot;elasticsearch&quot;&gt;&lt;a href=&quot;#elasticsearch&quot; class=&quot;headerlink&quot; title=&quot;elasticsearch&quot;&gt;&lt;/a&gt;elasticsearch&lt;/h5&gt;&lt;p&gt;终于回到正题了, elasticsearch是基于lucence引擎的一套简单高可用系统, 提供了非常方面的nosql/rest服务的功能, 也是这套监控系统的核心所在. &lt;/p&gt;
&lt;p&gt;最新版本的elasticsearch可以很方便建立一个分布式集群, 在该集群中通常有master和数据这两大类节点.&lt;/p&gt;
&lt;p&gt;(1) 节点属性&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cluster.name: es_cluster    # 集群名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;node.name: $&amp;#123;HOSTNAME&amp;#125;		# 将hostname作为节点名字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;node.master: true			# 节点是否可以被选作为master节点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;node.data: true				# 节点是否可以被选作为data节点&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里注意, 如果node.master和node.data均为false, 则该节点是一个仲裁节点, 类似nginx负载均衡的功能.&lt;/p&gt;
&lt;p&gt;(2) 发现机制zen&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;discovery.zen.ping.multicast.enabled: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;discovery.zen.ping_interval: 3s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;discovery.zen.ping_timeout: 30s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;discovery.zen.ping_retries: 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;discovery.zen.ping.unicast.hosts: &amp;quot;host1&amp;quot;, &amp;quot;host2:9300&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;采用unicast方式显示设置集群中的节点, 默认各个节点之间使用的端口是9300.&lt;/p&gt;
&lt;p&gt;(3) 配置网络&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# network&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;network.host: 0.0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;network.bind_host: 0.0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;network.publish_host: 0.0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# http service&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http.compression: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http.compression_level: 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;kibana&quot;&gt;&lt;a href=&quot;#kibana&quot; class=&quot;headerlink&quot; title=&quot;kibana&quot;&gt;&lt;/a&gt;kibana&lt;/h5&gt;&lt;p&gt;收集数据是为了展现, kibana即是一种基于elasticsearch数据展现的工具.&lt;br&gt;kibana默认提供了topbeat/filebeat/packetbeat等的数据展示模版. &lt;/p&gt;
&lt;h5 id=&quot;elastalert&quot;&gt;&lt;a href=&quot;#elastalert&quot; class=&quot;headerlink&quot; title=&quot;elastalert&quot;&gt;&lt;/a&gt;elastalert&lt;/h5&gt;&lt;p&gt;作为一个监控系统, 报警机制不得缺少, elastic官方提供的收费方案比较简单.&lt;br&gt;这里介绍一种免费开源方案, 那就是&lt;a href=&quot;https://github.com/Yelp/elastalert.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;elastalert&lt;/a&gt;, 具体参考官方代码.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;针对数据中心的监控, 许多
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Rexify运维工具</title>
    <link href="http://zenvv.com/2016/04/16/rexify-ansible-by-talk/"/>
    <id>http://zenvv.com/2016/04/16/rexify-ansible-by-talk/</id>
    <published>2016-04-16T01:33:00.000Z</published>
    <updated>2016-04-24T16:34:42.051Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;当系统达到一定规模时，传统单机器维护方式已经不再适合，需要一些自动化工具进行管理。&lt;/p&gt;
&lt;p&gt;下面将介绍在实践工程中使用的几种方式(针对单一类型系统: linux)。&lt;/p&gt;
&lt;h4 id=&quot;1-ssh&quot;&gt;&lt;a href=&quot;#1-ssh&quot; class=&quot;headerlink&quot; title=&quot;1. ssh&quot;&gt;&lt;/a&gt;1. ssh&lt;/h4&gt;&lt;p&gt;ssh工具一款linux及其类系统中的利器，常被用来作远程系统登录和数据拷贝，同时还有另外一个重要功能: 远程执行命令。&lt;/p&gt;
&lt;p&gt;同时，针对一些小规模的系统(例如几十个节点)，ssh也拥有足够的能力对其自动化管理。&lt;/p&gt;
&lt;p&gt;在配置完成ssh的无密码key连接方式之后，编写一些bash脚本管理远程主机地址即可。当然，纯ssh工具对管理人员的要求比较高。&lt;/p&gt;
&lt;p&gt;可以考虑采用一些第三方工具简化管理，常见工具如puppet, chef, cfengine, ansible以及rexify等。&lt;/p&gt;
&lt;p&gt;使用过其中的两款ansible和rexify, 均属于灵巧型-无客户端和服务端，非常适合喜欢干净系统的工程师(最烦在各个子节点上安装agent)，也是在ssh的基础上实现的。&lt;/p&gt;
&lt;h4 id=&quot;2-ansible&quot;&gt;&lt;a href=&quot;#2-ansible&quot; class=&quot;headerlink&quot; title=&quot;2. ansible&quot;&gt;&lt;/a&gt;2. ansible&lt;/h4&gt;&lt;p&gt;ansible是python语言开发的一种框架，基于yaml语法和提供的模块定义各种playbook，对软件进行配置管理，并且能够支持windows(powershell)。&lt;/p&gt;
&lt;p&gt;ansible对于常规的运维管理已经足够，如果需要支持复杂的定制化服务，则需要编写playbook甚至新模块来支持。&lt;/p&gt;
&lt;p&gt;不得不说，编写playbook也是一个繁琐的过程，其功能常显得鸡肋以及力不从心(如在nosql中作join查询)。&lt;/p&gt;
&lt;p&gt;可以通过编写新模块或者脚本对其扩展，ansible新模块的方式不是很方便。&lt;br&gt;而编写脚本然后远程执行相对简单，但也常遇到一些不可思议的错误。&lt;/p&gt;
&lt;h4 id=&quot;3-rexify&quot;&gt;&lt;a href=&quot;#3-rexify&quot; class=&quot;headerlink&quot; title=&quot;3. rexify&quot;&gt;&lt;/a&gt;3. rexify&lt;/h4&gt;&lt;p&gt;rexify是perl语言开发的框架，目标即是无客户端轻量级，与ansible不同的是其完全基于模块的方式进行远程管理，充分利用了perl语言的优点。&lt;/p&gt;
&lt;p&gt;rexify模块提供的功能足够丰富，在此基础上进行一些整合，即可轻易地支持所需要的功能。同时也对脚本的远程执行支持非常好。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;当系统达到一定规模时，传统
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Nginx虚拟主机和多域名处理逻辑</title>
    <link href="http://zenvv.com/2016/04/13/nginx-server-config/"/>
    <id>http://zenvv.com/2016/04/13/nginx-server-config/</id>
    <published>2016-04-13T12:30:00.000Z</published>
    <updated>2016-04-26T15:12:33.894Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;与apache httpd类似，在nginx中通过server字段定义多个虚拟主机。&lt;br&gt;nginx按照server加载顺序处理用户请求, 但可能导致一些意外行为，下面将进行具体描述。&lt;/p&gt;
&lt;p&gt;假设服务器地址为ServerIP, 该IP被多个域名映射(www.b.com, www.c.com和www.d.com).&lt;/p&gt;
&lt;h4 id=&quot;情形1：所有server在同一个文件中-例如default-conf&quot;&gt;&lt;a href=&quot;#情形1：所有server在同一个文件中-例如default-conf&quot; class=&quot;headerlink&quot; title=&quot;情形1：所有server在同一个文件中, 例如default.conf.&quot;&gt;&lt;/a&gt;情形1：所有server在同一个文件中, 例如default.conf.&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# server-b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	listen 80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	server_name b.com www.b.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# server-c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	listen 80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	server_name c.com www.c.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;显然b.com/c.com将会分别正确访问到server-b/server-c的资源,&lt;/p&gt;
&lt;p&gt;d.com/ServerIP也可以访问到nginx, 由于没有匹配的server_name，&lt;br&gt;nginx按照server加载顺序进行处理，将使用第一个server资源进行响应请求。&lt;br&gt;于是d.com访问的是server-b的资源。&lt;/p&gt;
&lt;h5 id=&quot;1-禁止d-com&quot;&gt;&lt;a href=&quot;#1-禁止d-com&quot; class=&quot;headerlink&quot; title=&quot;1) 禁止d.com&quot;&gt;&lt;/a&gt;1) 禁止d.com&lt;/h5&gt;&lt;p&gt;如果仅禁止d.com访问server-b/c的资源，可以显示定义server处理d.com。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# server-b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	listen 80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	server_name b.com www.b.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# server-c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	listen 80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	server_name c.com www.c.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# server-d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	listen 80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	server_name d.com www.d.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	try_files $uri $uri/ =404;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;2-同时禁止d-com和ServerIP&quot;&gt;&lt;a href=&quot;#2-同时禁止d-com和ServerIP&quot; class=&quot;headerlink&quot; title=&quot;2) 同时禁止d.com和ServerIP&quot;&gt;&lt;/a&gt;2) 同时禁止d.com和ServerIP&lt;/h5&gt;&lt;p&gt;如果同时禁止d.com和ServerIP访问资源(server-b/server-c), 则需在server-b之再定义一个空server虚拟主机。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# server-non&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	listen 80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	server_name _;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		try_files $uri $uri/ =404;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# server-b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	listen 80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	server_name b.com www.b.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# server-c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	listen 80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	server_name c.com www.c.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对于server-non设置中的server-name值无所谓，只要不影响正常服务即可。&lt;/p&gt;
&lt;p&gt;显然，第二种设置更简单通用，但需要在所有虚拟主机之前定义空server才起作用。&lt;/p&gt;
&lt;h4 id=&quot;情形2-server在不同的文件中&quot;&gt;&lt;a href=&quot;#情形2-server在不同的文件中&quot; class=&quot;headerlink&quot; title=&quot;情形2: server在不同的文件中&quot;&gt;&lt;/a&gt;情形2: server在不同的文件中&lt;/h4&gt;&lt;p&gt;假设b.com设置在bsize.conf中，c.com设置在csite.conf中. b/c.com均能正常访问资源。&lt;br&gt;但d.com/ServerIP仍然是访问server-b的资源，而不是server-c，原因是由于Nginx include是按照文件名字ascii属性进行加载的。&lt;/p&gt;
&lt;p&gt;也即是说，bsite.conf中server比csite.conf优先加载, 如果c.com设置在bsite.conf,b.com设置在csite.conf，则d.com/ServerIP访问到的是server-c的资源。&lt;/p&gt;
&lt;p&gt;因此，对于仅禁止d.com访问server-b/server-c的资源，仅需要显示设置其即可(文件名无所谓)，如下所示。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# server-d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	listen 80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	server_name d.com www.d.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		try_files $uri $uri/ =404;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果需要通用禁止所有非b.com/c.com(如d.com/ServerIP)访问资源，则必须设置比已有配置文件名ascii更靠前的文件名。在这个案例中，创建一个文件名为aaa.conf即可，其内容如下&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# server-non&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	listen 80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	server_name _;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		try_files $uri $uri/ =404;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;与apache httpd
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="nginx" scheme="http://zenvv.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>HTTP URI末尾斜杠在nginx中的处理</title>
    <link href="http://zenvv.com/2016/04/11/nginx-slash-http/"/>
    <id>http://zenvv.com/2016/04/11/nginx-slash-http/</id>
    <published>2016-04-11T09:39:00.000Z</published>
    <updated>2016-04-26T15:13:29.220Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;HTTP协议请求的uri, 是以斜杠”/“(slash)作为基本分割符。而对于末尾的斜杠容易被我们忽略，下面将就这个问题进行具体分析。&lt;/p&gt;
&lt;p&gt;首先得明确，http uri是否以slash结尾，是意味着不同的含义，例如以slash分割后的最后一个单元字段命名为lastsection。那么通常情况下，不是以slash结尾是指向服务器请求名字为lastsection的资源(&lt;code&gt;http://localhost/lastsection&lt;/code&gt;)，以slash结尾的是请求路径lastsection下的某个资源(&lt;code&gt;http://localhost/lastsection/&lt;/code&gt;)。&lt;/p&gt;
&lt;p&gt;具体到nginx中，又是如何进行处理的，下面以静态资源为例，并将index设置为index.html。&lt;/p&gt;
&lt;p&gt;&lt;b&gt;情形1: nginx root下不存在test目录&lt;/b&gt;&lt;br&gt;如果请求&lt;code&gt;http://localhost/test&lt;/code&gt;, 则nginx返回错误(404 Not Found)。&lt;/p&gt;
&lt;p&gt;&lt;b&gt;情形2: root下存在test空目录&lt;/b&gt;&lt;br&gt;如果请求&lt;code&gt;http://localhost/test&lt;/code&gt;, 则nginx返回(301 Moved Permanently), 浏览器在收到后，将重新请求(Redirect) &lt;code&gt;http://localhost/test/&lt;/code&gt;, 由于test为空目录不存在index.html, 故而nginx返回错误(403 Forbidden)。&lt;/p&gt;
&lt;p&gt;如果请求&lt;code&gt;http://localhost/test/&lt;/code&gt;, 则nginx直接返回错误(403 Forbidden)。&lt;/p&gt;
&lt;p&gt;&lt;b&gt;情形3: test目录中存在文件index.html&lt;/b&gt;&lt;br&gt;如果请求&lt;code&gt;http://localhost/test&lt;/code&gt;, 则nginx返回(301 Moved Permanently), 浏览器在收到后，将重定向到(Redirect) &lt;code&gt;http://localhost/test/&lt;/code&gt;, nginx返回(200 OK)。&lt;/p&gt;
&lt;p&gt;如果请求&lt;code&gt;http://localhost/test/&lt;/code&gt;, 则nginx直接返回(200 OK)。&lt;/p&gt;
&lt;p&gt;注意，当在浏览器中重复请求同一个有效资源时，Nginx将返回(304 Not Modified)而不是(200 OK)。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;如上所述，nginx对这些末尾没有slash而相应目录下不存在相应资源的请求，将会返回301致使客户端尝试带有slash重新redirect请求一次。在使用nginx作为反向代理(如tomcat)时，也会发生相关未预料的行为。同时这种行为也导致客户端重复请求一次。&lt;/p&gt;
&lt;p&gt;在实际部署中通过rewrite模块等方式可以避免这种情况。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;HTTP协议请求的uri,
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="nginx" scheme="http://zenvv.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx反向代理的压缩设置和日志格式</title>
    <link href="http://zenvv.com/2016/04/09/nginx-proxy-config/"/>
    <id>http://zenvv.com/2016/04/09/nginx-proxy-config/</id>
    <published>2016-04-09T13:29:00.000Z</published>
    <updated>2016-04-15T13:37:46.542Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;使用Nginx作反向代理时，在实际部署中对代理压缩和日志格式作一些调整，以提高性能和便于后续的数据处理。&lt;/p&gt;
&lt;p&gt;在之前一篇&lt;a href=&quot;http://zenvv.com/2016/04/06/nginx-tomcat-config/&quot;&gt;《nginx配置和tomcat会话保持》&lt;/a&gt;的基础上作一些总结和加强。&lt;/p&gt;
&lt;h4 id=&quot;1-反向代理压缩&quot;&gt;&lt;a href=&quot;#1-反向代理压缩&quot; class=&quot;headerlink&quot; title=&quot;1. 反向代理压缩&quot;&gt;&lt;/a&gt;1. 反向代理压缩&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gzip  on;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gzip_disable &amp;quot;msie6&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gzip_vary on;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gzip_proxied any;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gzip_min_length 1k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gzip_comp_level 3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gzip_buffers 16 8k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gzip_http_version 1.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gzip_types text/plain text/css application/json application/x-javascript application/javascript text/javascript application/xml;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果被代理的服务器已经打开gzip, 则此处建议关闭&lt;code&gt;gzip_proxied off;&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&quot;2-反向代理日志格式&quot;&gt;&lt;a href=&quot;#2-反向代理日志格式&quot; class=&quot;headerlink&quot; title=&quot;2. 反向代理日志格式&quot;&gt;&lt;/a&gt;2. 反向代理日志格式&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log_format access &amp;apos;$remote_addr - $remote_user [$time_local] &amp;quot;$request&amp;quot; $http_host &amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;$status $body_bytes_sent &amp;quot;$http_referer&amp;quot; &amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;&amp;quot;$http_user_agent&amp;quot; &amp;quot;$http_x_forwarded_for&amp;quot; &amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;$upstream_addr $upstream_status $upstream_cache_status &amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;&amp;quot;$upstream_http_content_type&amp;quot; $upstream_response_time &amp;gt; $request_time&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	server_name vhost;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	access_log /var/log/nginx/access_vhost.log access;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;设置目的是记录用户地址和处理服务器地址，便于作数据分析和系统监控。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;使用Nginx作反向代理时
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Python发展与我</title>
    <link href="http://zenvv.com/2016/04/07/python-in-practice/"/>
    <id>http://zenvv.com/2016/04/07/python-in-practice/</id>
    <published>2016-04-07T14:15:00.000Z</published>
    <updated>2016-04-14T03:53:04.418Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;Python具有简洁易用等优点，是我所最喜爱的语言之一，至今为止已断断续续使用了快十年之久。&lt;/p&gt;
&lt;h4 id=&quot;1-Python简史&quot;&gt;&lt;a href=&quot;#1-Python简史&quot; class=&quot;headerlink&quot; title=&quot;1. Python简史&quot;&gt;&lt;/a&gt;1. Python简史&lt;/h4&gt;&lt;p&gt;Guido从1989年的圣诞节期间开始，到1991年的第一个python编译器发布，已经是二十多年的编程语言，从语言发展史来看算是一个老语言了。&lt;br&gt;但如今依然表现为青春主流，活力不减，仍没有可取代的语言。&lt;/p&gt;
&lt;p&gt;这里简单吐槽下python的强制格式对齐，许多人对这种要求非常不满甚至痛恨。&lt;/p&gt;
&lt;p&gt;私下以为，如果知道大名鼎鼎的perl, 并用其编写过若干应用，一定会对Python的格式对齐大呼过瘾，^_^。&lt;/p&gt;
&lt;h4 id=&quot;2-Python大发展&quot;&gt;&lt;a href=&quot;#2-Python大发展&quot; class=&quot;headerlink&quot; title=&quot;2. Python大发展&quot;&gt;&lt;/a&gt;2. Python大发展&lt;/h4&gt;&lt;p&gt;在Python仍是一种小众语言的时候，即开始基于python编写一些具体的应用和数据处理模块，如P2P应用、增量爬虫、门户网站和数据统计等。&lt;/p&gt;
&lt;p&gt;对现有的各种解决方案进行综合集成，使用python进行处理，其带来的快感让人欲罢不能。&lt;/p&gt;
&lt;p&gt;随后在cisco的那几年工作期间中并没有其相关的需求，平时用来编写一些系统小工具作为消遣(后来直接使用bash)。&lt;/p&gt;
&lt;p&gt;在这段时间内，python却有了巨大的发展变化，成为主流语言之一。&lt;/p&gt;
&lt;p&gt;python的发展离不开其开放架构， 如twisted/django/web.py/flask/pip/virtualenv等的蓬勃兴起，极大地推动了python语言的普及和发展。&lt;/p&gt;
&lt;p&gt;同时，python凭借其优秀的语言特性，在数据分析领域逐渐占据了统治地位，成为了名副其实的Number one。&lt;/p&gt;
&lt;p&gt;今天，Python在各处活动并作用着，从最直接的web服务，大数据分析，人工智能，系统监控运维，甚至到最基础操作系统的正常运行，都有其并不伟岸的身影。&lt;/p&gt;
&lt;p&gt;毫不夸张的说，Python在支撑着这个时代最伟大的互联网，是互联网时代伟大的基石之一。&lt;/p&gt;
&lt;h4 id=&quot;3-Python适合场景&quot;&gt;&lt;a href=&quot;#3-Python适合场景&quot; class=&quot;headerlink&quot; title=&quot;3. Python适合场景&quot;&gt;&lt;/a&gt;3. Python适合场景&lt;/h4&gt;&lt;p&gt;Python通过一种非常简洁的方式来解决实际需求，从而引领互联网的大势。&lt;/p&gt;
&lt;p&gt;然而，Python并不是万能的，其语言特点决定了应用场景，那即是I/O密集型和非实时的应用。&lt;/p&gt;
&lt;p&gt;Python最不适合的情景是处理实时的CPU密集型任务，这里将不会就语言的具体实现进行分析。&lt;/p&gt;
&lt;p&gt;一句不恰当的总结，python适合周期内执行代码少的应用(即耗用cpu周期少)。&lt;/p&gt;
&lt;p&gt;对于大多数的web应用，系统瓶颈主要在于各种I/O性能，例如网络带宽和磁盘读写速度。&lt;/p&gt;
&lt;p&gt;而对于数据分析领域，通常进行离线处理数据，而不是提供实时数据分析返回结果。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;爱好一种语言可以，不要盲从。&lt;br&gt;世上没有一蹴而就，没有万能。&lt;br&gt;让每一种语言，做适合的任务。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;Python具有简洁易用等
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="python" scheme="http://zenvv.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat常用配置</title>
    <link href="http://zenvv.com/2016/04/07/tomcat-config/"/>
    <id>http://zenvv.com/2016/04/07/tomcat-config/</id>
    <published>2016-04-07T13:22:00.000Z</published>
    <updated>2016-04-26T15:14:22.060Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;tomcat默认配置已能满足正常需求，为了优化服务可以进行以下的简单设置。&lt;/p&gt;
&lt;p&gt;以下配置针对tomcat8。&lt;/p&gt;
&lt;h4 id=&quot;1-设置Connector-server-xml&quot;&gt;&lt;a href=&quot;#1-设置Connector-server-xml&quot; class=&quot;headerlink&quot; title=&quot;1. 设置Connector(server.xml)&quot;&gt;&lt;/a&gt;1. 设置Connector(server.xml)&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Connector port=&amp;quot;8080&amp;quot; protocol=&amp;quot;HTTP/1.1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           connectionTimeout=&amp;quot;30000&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           acceptCount=&amp;quot;1024&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           maxThreads=&amp;quot;1024&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           minSpareThreads=&amp;quot;16&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           acceptorThreadCount=&amp;quot;4&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           URIEncoding=&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           useURIValidationHack=&amp;quot;false&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           enableLookups=&amp;quot;false&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           compression=&amp;quot;on&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           compressionMinSize=&amp;quot;2048&amp;quot; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           compressableMimeType=&amp;quot;text/html,text/xml,text/javascript,text/css,text/plain&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           redirectPort=&amp;quot;8443&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;acceptCount: 等待处理队列的最大长度，超过该数目的后续请求将被refuse&lt;br&gt;maxThreads: 处理任务的最大线程数，即同时能够处理的最大任务数目&lt;br&gt;minSpareThreads: 保留的最少空闲线程数&lt;br&gt;acceptorThreadCount: 接受连接(socket accept调用)的线程数，默认为1，通常设置为cpu核心数&lt;br&gt;protocol=”HTTP/1.1”: java http connector协议。&lt;/p&gt;
&lt;p&gt;tomcat8标准连接器包括BIO阻塞模式，非阻塞NIO1，非阻塞NIO2和ARP/Native四种模式。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;protocol=&amp;quot;org.apache.coyote.http11.Http11Protocol&amp;quot; - blocking Java connector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;protocol=&amp;quot;org.apache.coyote.http11.Http11NioProtocol&amp;quot; - non blocking Java NIO connector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;protocol=&amp;quot;org.apache.coyote.http11.Http11Nio2Protocol&amp;quot; - non blocking Java NIO2 connector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;protocol=&amp;quot;org.apache.coyote.http11.Http11AprProtocol&amp;quot; - the APR/native connector.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当使用protocol=”HTTP/1.1”时，如果PATH(windows)或LD_LIBRARY_PATH(linux)路径下，存在tomcat native库，则使用APR/native模式；否选使用一种NIO模式。&lt;br&gt;实际部署中，建议设置protocol=”HTTP/1.1”。&lt;/p&gt;
&lt;p&gt;各个模式具体说明见&lt;a href=&quot;http://tomcat.apache.org/tomcat-8.0-doc/config/http.html#Connector_Comparison&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方链接&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这里主要调整acceptCount/maxThreads这几个参数，提高并发处理能力，同时对文本文件进行压缩(compression=on)。&lt;/p&gt;
&lt;h4 id=&quot;2-nginx前端-tomcat后端的配置&quot;&gt;&lt;a href=&quot;#2-nginx前端-tomcat后端的配置&quot; class=&quot;headerlink&quot; title=&quot;2. nginx前端+tomcat后端的配置&quot;&gt;&lt;/a&gt;2. nginx前端+tomcat后端的配置&lt;/h4&gt;&lt;p&gt;首先, nginx作为反向代理前端，需要设置将用户信息传送到tomcat。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_set_header Host $http_host;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_set_header X-Real-Ip $remote_addr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_set_header X-Forwarded-Proto  $scheme;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_set_header Cookie $http_cookie;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_pass http://tomcat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其次，tomcat将这些真实用户信息写到日志中(默认是代理nginx的信息)(server.xml)。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Host name=&amp;quot;localhost&amp;quot;  appBase=&amp;quot;webapps&amp;quot; unpackWARs=&amp;quot;true&amp;quot; autoDeploy=&amp;quot;true&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;Valve className=&amp;quot;org.apache.catalina.valves.RemoteIpValve&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     remoteIpHeader=&amp;quot;x-forwarded-for&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     remoteIpProxiesHeader=&amp;quot;x-forwarded-by&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     protocolHeader=&amp;quot;x-forwarded-proto&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;Context path=&amp;quot;/&amp;quot; docBase=&amp;quot;&amp;quot; debug=&amp;quot;0&amp;quot; privileged=&amp;quot;true&amp;quot; reloadable=&amp;quot;false&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;Valve className=&amp;quot;org.apache.catalina.valves.AccessLogValve&amp;quot; directory=&amp;quot;logs&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         prefix=&amp;quot;localhost_access_log&amp;quot; suffix=&amp;quot;.txt&amp;quot; resolveHosts=&amp;quot;false&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         pattern=&amp;quot;%h %l %u %t &amp;amp;quot;%r&amp;amp;quot; %s %b %&amp;#123;x-forwarded-for&amp;#125;i&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/Host&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里存在另一个细节，在产品部署中建议设置reloadable=”false”以提高tomcat性能。&lt;/p&gt;
&lt;h4 id=&quot;3-tomcat启动设置&quot;&gt;&lt;a href=&quot;#3-tomcat启动设置&quot; class=&quot;headerlink&quot; title=&quot;3. tomcat启动设置&quot;&gt;&lt;/a&gt;3. tomcat启动设置&lt;/h4&gt;&lt;p&gt;tomcat使用的是java默认参数，实际部署中可以根据系统的具体性能进行调整，如下所示将其添加到tomcat的启动脚本catalina.sh和daemon.sh中。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;JAVA_OPTS=&amp;quot;-server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-Xms512M -Xmx4096M&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-XX:LargePageSizeInBytes=128m&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-XX:+AggressiveOpts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-XX:+UseBiasedLocking&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-XX:+DisableExplicitGC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-XX:+UseFastAccessorMethods&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-XX:+UseParNewGC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-XX:+UseConcMarkSweepGC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-XX:+CMSParallelRemarkEnabled&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-XX:+UseCMSCompactAtFullCollection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-XX:+UseCMSInitiatingOccupancyOnly&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-Djava.awt.headless=true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-Djava.security.egd=file:/dev/./urandom&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;-Xms: 初始化内存&lt;br&gt;-Xmx: 最大内存&lt;br&gt;-Xss: 线程栈大小，无需设置&lt;br&gt;-XX:+AggressiveOpts: JVM性能优化，加快编译&lt;br&gt;-XX:+UseBiasedLocking: JVM lock优化&lt;br&gt;-XX:LargePageSizeInBytes=128m: 堆的内存页大小&lt;br&gt;-XX:+DisableExplicitGC: 关闭系统System.gc()&lt;br&gt;-Djava.awt.headless=true: headless模式，适于server程序，无鼠标/显示/键盘等。&lt;br&gt;-Djava.security.egd=file:/dev/./urandom: 默认/dev/random是block模式，针对大并发有性能影响，若对随机数要求不高则用伪随机代替(使用file:/dev/./urandom,不是file:/dev/urandom)。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;更多的优化服务设置，请参照&lt;a href=&quot;http://tomcat.apache.org/tomcat-8.0-doc/config/http.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;tomcat默认配置已能满
    
    </summary>
    
      <category term="技术" scheme="http://zenvv.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="tomcat" scheme="http://zenvv.com/tags/tomcat/"/>
    
  </entry>
  
</feed>
